import { APIGatewayProxyEvent, Context } from "aws-lambda";

export const mockContext: Context = {
  callbackWaitsForEmptyEventLoop: false,
  succeed: () => "mock",
  fail: () => "mock",
  done: () => "mock",
  functionVersion: "String",
  functionName: "String",
  memoryLimitInMB: "String",
  logGroupName: "String",
  logStreamName: "String",
  clientContext: undefined,
  identity: undefined,
  invokedFunctionArn: "String",
  awsRequestId: "String",
  getRemainingTimeInMillis: () => 100,
};

export const mockApiGateWayProxyEvent: APIGatewayProxyEvent = {
  resource: "String",
  path: "String",
  httpMethod: "POST",
  headers: {
    Accept: "*/*",
  },
  multiValueHeaders: {
    Accept: ["*/*"],
  },
  queryStringParameters: null,
  multiValueQueryStringParameters: null,
  pathParameters: null,
  stageVariables: null,
  requestContext: {
    authorizer: null,
    resourceId: "nmthcx",
    resourcePath: "/todo",
    httpMethod: "POST",
    extendedRequestId: "String",
    requestTime: "01/Mar/2024:14:54:06 +0000",
    path: "/prod/todo",
    accountId: "12345678910",
    protocol: "HTTP/1.1",
    stage: "prod",
    domainPrefix: "String",
    requestTimeEpoch: 1709304846884,
    requestId: "String",
    identity: {
      apiKey: null,
      apiKeyId: null,
      clientCert: null,
      cognitoIdentityPoolId: null,
      accountId: null,
      cognitoIdentityId: null,
      caller: null,
      sourceIp: "111.111.111.111",
      principalOrgId: null,
      accessKey: null,
      cognitoAuthenticationType: null,
      cognitoAuthenticationProvider: null,
      userArn: null,
      userAgent: "Thunder Client (https://www.thunderclient.com)",
      user: null,
    },
    domainName: "123456.execute-api.us-east-1.amazonaws.com",
    apiId: "String",
  },
  body: "{id:1234,todo:hello}",
  isBase64Encoded: false,
};

export const mockGetEvent = {
  resource: "/getTodo",
  path: "/getTodo",
  httpMethod: "GET",
  headers: {
    Accept: "*/*",
    "Accept-Encoding": "gzip, deflate, br",
    "CloudFront-Forwarded-Proto": "https",
    "CloudFront-Is-Desktop-Viewer": "true",
    "CloudFront-Is-Mobile-Viewer": "false",
    "CloudFront-Is-SmartTV-Viewer": "false",
    "CloudFront-Is-Tablet-Viewer": "false",
    "CloudFront-Viewer-ASN": "5378",
    "CloudFront-Viewer-Country": "GB",
    Host: "m11695a9tl.execute-api.us-east-1.amazonaws.com",
    "User-Agent": "Thunder Client (https://www.thunderclient.com)",
    Via: "1.1 a654b4b54d3322bdcbd8b65f511761c0.cloudfront.net (CloudFront)",
    "X-Amz-Cf-Id": "eaRs26pHS1AEFCMw_ivk2uc93i8wjw_T0rgun_3ibRPlNMKZ99kbtQ==",
    "X-Amzn-Trace-Id": "Root=1-65e87735-5f46394b4eef307857b00cd8",
    "X-Forwarded-For": "84.71.116.190, 70.132.15.37",
    "X-Forwarded-Port": "443",
    "X-Forwarded-Proto": "https",
  },
  multiValueHeaders: {
    Accept: ["*/*"],
    "Accept-Encoding": ["gzip, deflate, br"],
    "CloudFront-Forwarded-Proto": ["https"],
    "CloudFront-Is-Desktop-Viewer": ["true"],
    "CloudFront-Is-Mobile-Viewer": ["false"],
    "CloudFront-Is-SmartTV-Viewer": ["false"],
    "CloudFront-Is-Tablet-Viewer": ["false"],
    "CloudFront-Viewer-ASN": ["5378"],
    "CloudFront-Viewer-Country": ["GB"],
    Host: ["m11695a9tl.execute-api.us-east-1.amazonaws.com"],
    "User-Agent": ["Thunder Client (https://www.thunderclient.com)"],
    Via: ["1.1 a654b4b54d3322bdcbd8b65f511761c0.cloudfront.net (CloudFront)"],
    "X-Amz-Cf-Id": ["eaRs26pHS1AEFCMw_ivk2uc93i8wjw_T0rgun_3ibRPlNMKZ99kbtQ=="],
    "X-Amzn-Trace-Id": ["Root=1-65e87735-5f46394b4eef307857b00cd8"],
    "X-Forwarded-For": ["84.71.116.190, 70.132.15.37"],
    "X-Forwarded-Port": ["443"],
    "X-Forwarded-Proto": ["https"],
  },
  queryStringParameters: { todo: "123" },
  multiValueQueryStringParameters: { todo: ["123457"] },
  pathParameters: null,
  stageVariables: null,
  requestContext: {
    resourceId: "dddodf",
    resourcePath: "/getTodo",
    httpMethod: "GET",
    extendedRequestId: "UNeQbGZ0oAMETGQ=",
    requestTime: "06/Mar/2024:14:01:25 +0000",
    path: "/prod/getTodo",
    accountId: "997167979419",
    protocol: "HTTP/1.1",
    stage: "prod",
    domainPrefix: "m11695a9tl",
    requestTimeEpoch: 1709733685673,
    requestId: "d068aed7-b7bd-4a48-aa23-70bd91f64131",
    authorizer: {},
    identity: {
      cognitoIdentityPoolId: null,
      accountId: null,
      cognitoIdentityId: null,
      caller: null,
      sourceIp: "84.71.116.190",
      principalOrgId: null,
      accessKey: null,
      cognitoAuthenticationType: null,
      cognitoAuthenticationProvider: null,
      userArn: null,
      userAgent: "Thunder Client (https://www.thunderclient.com)",
      user: null,
    },
    domainName: "m11695a9tl.execute-api.us-east-1.amazonaws.com",
    deploymentId: "chm28g",
    apiId: "m11695a9tl",
  },
  body: null,
  isBase64Encoded: false,
};

export const mockGetEvent1: APIGatewayProxyEvent = {
  resource: "/my/path",
  path: "/my/path",
  httpMethod: "GET",
  headers: {
    header1: "value1",
    header2: "value1,value2",
  },
  multiValueHeaders: {
    header1: ["value1"],
    header2: ["value1", "value2"],
  },
  queryStringParameters: { todo: "123" },
  multiValueQueryStringParameters: { todo: ["123457"] },
  requestContext: {
    accountId: "123456789012",
    apiId: "id",
    authorizer: {
      claims: null,
      scopes: null,
    },
    domainName: "id.execute-api.us-east-1.amazonaws.com",
    domainPrefix: "id",
    extendedRequestId: "request-id",
    httpMethod: "GET",
    identity: {
      apiKeyId: "",
      apiKey: "",
      accessKey: "null",
      accountId: "null",
      caller: null,
      cognitoAuthenticationProvider: null,
      cognitoAuthenticationType: null,
      cognitoIdentityId: null,
      cognitoIdentityPoolId: null,
      principalOrgId: null,
      sourceIp: "IP",
      user: null,
      userAgent: "user-agent",
      userArn: null,
      clientCert: {
        clientCertPem: "CERT_CONTENT",
        subjectDN: "www.example.com",
        issuerDN: "Example issuer",
        serialNumber: "a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1",
        validity: {
          notBefore: "May 28 12:30:02 2019 GMT",
          notAfter: "Aug  5 09:36:04 2021 GMT",
        },
      },
    },
    path: "/my/path",
    protocol: "HTTP/1.1",
    requestId: "id=",
    requestTime: "04/Mar/2020:19:15:17 +0000",
    requestTimeEpoch: 1583349317135,
    resourceId: "null",
    resourcePath: "/my/path",
    stage: "$default",
  },
  pathParameters: null,
  stageVariables: null,
  body: "Hello from Lambda!",
  isBase64Encoded: false,
};

export const mockDeleteEvent1: APIGatewayProxyEvent = {
  resource: "/my/path",
  path: "/my/path",
  httpMethod: "DELETE",
  headers: {
    header1: "value1",
    header2: "value1,value2",
  },
  multiValueHeaders: {
    header1: ["value1"],
    header2: ["value1", "value2"],
  },
  queryStringParameters: { todo: "123" },
  multiValueQueryStringParameters: { todo: ["123457"] },
  requestContext: {
    accountId: "123456789012",
    apiId: "id",
    authorizer: {
      claims: null,
      scopes: null,
    },
    domainName: "id.execute-api.us-east-1.amazonaws.com",
    domainPrefix: "id",
    extendedRequestId: "request-id",
    httpMethod: "DELETE",
    identity: {
      apiKeyId: "",
      apiKey: "",
      accessKey: "null",
      accountId: "null",
      caller: null,
      cognitoAuthenticationProvider: null,
      cognitoAuthenticationType: null,
      cognitoIdentityId: null,
      cognitoIdentityPoolId: null,
      principalOrgId: null,
      sourceIp: "IP",
      user: null,
      userAgent: "user-agent",
      userArn: null,
      clientCert: {
        clientCertPem: "CERT_CONTENT",
        subjectDN: "www.example.com",
        issuerDN: "Example issuer",
        serialNumber: "a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1:a1",
        validity: {
          notBefore: "May 28 12:30:02 2019 GMT",
          notAfter: "Aug  5 09:36:04 2021 GMT",
        },
      },
    },
    path: "/my/path",
    protocol: "HTTP/1.1",
    requestId: "id=",
    requestTime: "04/Mar/2020:19:15:17 +0000",
    requestTimeEpoch: 1583349317135,
    resourceId: "null",
    resourcePath: "/my/path",
    stage: "$default",
  },
  pathParameters: null,
  stageVariables: null,
  body: "Hello from Lambda!",
  isBase64Encoded: false,
};

export const delmock: APIGatewayProxyEvent = {
  resource: "/deleteTodo",
  path: "/deleteTodo",
  httpMethod: "DELETE",
  headers: {
    Accept: "*/*",
    "Accept-Encoding": "gzip, deflate, br",
    "CloudFront-Forwarded-Proto": "https",
    "CloudFront-Is-Desktop-Viewer": "true",
    "CloudFront-Is-Mobile-Viewer": "false",
    "CloudFront-Is-SmartTV-Viewer": "false",
    "CloudFront-Is-Tablet-Viewer": "false",
    "CloudFront-Viewer-ASN": "5378",
    "CloudFront-Viewer-Country": "GB",
    Host: "m11695a9tl.execute-api.us-east-1.amazonaws.com",
    "User-Agent": "Thunder Client (https://www.thunderclient.com)",
    Via: "1.1 82bacd1af934cd2afa8b1ccc8f096b22.cloudfront.net (CloudFront)",
    "X-Amz-Cf-Id": "yvqQcSIYmluDQJnvD9NgQMY7HE6igRoxOV3l0Y1zXG9u5a4oqOuw5w==",
    "X-Amzn-Trace-Id": "Root=1-65e892c3-09ae7b37070b68b00b646aee",
    "X-Forwarded-For": "84.71.116.190, 70.132.15.135",
    "X-Forwarded-Port": "443",
    "X-Forwarded-Proto": "https",
  },
  multiValueHeaders: {
    Accept: ["*/*"],
    "Accept-Encoding": ["gzip, deflate, br"],
    "CloudFront-Forwarded-Proto": ["https"],
    "CloudFront-Is-Desktop-Viewer": ["true"],
    "CloudFront-Is-Mobile-Viewer": ["false"],
    "CloudFront-Is-SmartTV-Viewer": ["false"],
    "CloudFront-Is-Tablet-Viewer": ["false"],
    "CloudFront-Viewer-ASN": ["5378"],
    "CloudFront-Viewer-Country": ["GB"],
    Host: ["m11695a9tl.execute-api.us-east-1.amazonaws.com"],
    "User-Agent": ["Thunder Client (https://www.thunderclient.com)"],
    Via: ["1.1 82bacd1af934cd2afa8b1ccc8f096b22.cloudfront.net (CloudFront)"],
    "X-Amz-Cf-Id": ["yvqQcSIYmluDQJnvD9NgQMY7HE6igRoxOV3l0Y1zXG9u5a4oqOuw5w=="],
    "X-Amzn-Trace-Id": ["Root=1-65e892c3-09ae7b37070b68b00b646aee"],
    "X-Forwarded-For": ["84.71.116.190, 70.132.15.135"],
    "X-Forwarded-Port": ["443"],
    "X-Forwarded-Proto": ["https"],
  },
  queryStringParameters: { delete: "12345714" },
  multiValueQueryStringParameters: { delete: ["12345714"] },
  pathParameters: null,
  stageVariables: null,
  requestContext: {
    resourceId: "m1o0ae",
    resourcePath: "/deleteTodo",
    httpMethod: "DELETE",
    extendedRequestId: "UNvemGidIAMESLg=",
    requestTime: "06/Mar/2024:15:58:59 +0000",
    path: "/prod/deleteTodo",
    accountId: "997167979419",
    protocol: "HTTP/1.1",
    stage: "prod",
    domainPrefix: "m11695a9tl",
    requestTimeEpoch: 1709740739567,
    requestId: "440fe4ea-7d4f-430d-8b5b-db3b5a1eb72a",
    identity: {
      apiKeyId: "",
      apiKey: "",
      clientCert: null,
      cognitoIdentityPoolId: null,
      accountId: null,
      cognitoIdentityId: null,
      caller: null,
      sourceIp: "84.71.116.190",
      principalOrgId: null,
      accessKey: null,
      cognitoAuthenticationType: null,
      cognitoAuthenticationProvider: null,
      userArn: null,
      userAgent: "Thunder Client (https://www.thunderclient.com)",
      user: null,
    },
    domainName: "m11695a9tl.execute-api.us-east-1.amazonaws.com",
    authorizer: null,
    apiId: "m11695a9tl",
  },
  body: null,
  isBase64Encoded: false,
};
